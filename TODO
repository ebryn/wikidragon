For Hackfest for the Light
==========================
* check screenplay formatting (dialog etc) -- apply my styles!

Later
=====
* Printable screenplay version

* bug: diffs seem wrong, eg version of screenplay summary with only first two paras vs whole summary
* bug: flash errors persist too long.  eg create node with no title, see flash error, click top bar to go 'home' -- still flash.

* in remote_nodes branch:
  * generate url on create -- wd.com/nodes/Harlan_Knight/Trust_Exchange/2008_11_31_11_59_01
  * bug: remixing remote nodes is broken when you're not logged into wikidragon!

* more story tests
* replace assert_select with response.should.have_tag in stories -- not sure why this is broken.  maybe upgrading rspec would fix this?

* text field to enter tags on node edit/create
* tag cloud at top of front page

* sortable columns -- author, title, (date?)

* secure login, password or link

* check on dh backup freq & cost - if nec do db backups - noone loses their data at OSGC, ever

* back / home link at bottom of nodes

* link to better markdown reference

----

* set up rcov for test coverage

* list of recent nodes

* alternate remix button that says "edit"

* crawl AA's site looking for specified comment in the section <!--creative commons remixable, or OSGC-->

* user managament page (admins only) - delete, edit users
  * PASSWD PROTECT OR PROTECT ADMIN IF WE LEAVE IT

* figure out how to avoid installing test data over real data when we upgrade prod db!!  check rails book test data section?

* allow users to select collaborators for a given node

----

* visual mapping of inheritance

----

* stack of sort columns -- so when I click on a, b, c, we get SORT BY c, b, a -- maybe just the last 2

* allow users to select collaborators for a node category (tag)

* choose between author and title sort

* searching
* categories

* worry about how http://localhost:3000/nodes/Trust_Exchange/ goes to the latest version of tx that *anyone* has created, regardless of whose article links to it...
  * solution: do a layer above the markdown engine, which replaces urls of the pattern ../(\w+)/ with /nodes/latest/\1/by/Harlan_Knight -- at this stage we may as well *write* links as [[WikiDragon]] instead of ../WikiDragon/

* text link to "create new node" on home page

* only show if known users exist: "Are you one of the users we know? If so, click on your button below:"

----

* make author name on home page a link to their version of Front_Page if it exists

* button stylez for display & edit remix linx on home page
* witty text for the "oops we don't know who you are, please select from the list below or enter your name in z box" page (just write it here in todo list if page not existy)
* witty "edit page" text
* bigger textboxes for create/edit (nicer styling is bonus)

----

* cancel button on create or edit pages
* preview of content (1st line) on home page
* robots.txt: no indexy plz
* put test content in rails migration
* front page - list of nodes by author - click node name to view node
* front page - list of nodes by node name - click author name to view node

----

* tree display of nodes
* geneology button on node page
* tree shows two levels of ancestors/children, and cumulative number of children underneath the bottom level

----

* crawl and scrape HTML sites, upon registration
* crawl and scrape wikimedia intances

* front page - latest changes
* if not logged in, you're asked for email addy & password. if email addy not recognized, you're asked whether you'd like to create a new account.
* forgot password link
* profile page with name & password
* remembers you (long-lived cookies)

* maybe: diffing takes place in Markdown space. HTML->Markdown converter used on HTML pages
* maybe: Markdown->HTML converter only destroys the HTML it knows how to consume

----

* show all discovered nodes

* generate rdoc

